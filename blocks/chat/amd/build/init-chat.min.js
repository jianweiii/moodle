define ("block_chat/init-chat",["exports"],function(a){"use strict";Object.defineProperty(a,"__esModule",{value:!0});a.connectChat=void 0;function b(a,b,c,d,e,f,g){try{var h=a[f](g),i=h.value}catch(a){c(a);return}if(h.done){b(i)}else{Promise.resolve(i).then(d,e)}}function c(a){return function(){var c=this,d=arguments;return new Promise(function(e,f){var i=a.apply(c,d);function g(a){b(i,e,f,g,h,"next",a)}function h(a){b(i,e,f,g,h,"throw",a)}g(void 0)})}}var d=function(){var a=c(regeneratorRuntime.mark(function a(b){var c;return regeneratorRuntime.wrap(function(a){while(1){switch(a.prev=a.next){case 0:a.next=2;return Twilio.Conversations.Client.create(b);case 2:c=a.sent;c.on("connectionStateChanged",function(a){var b=document.getElementById("connection-status");if("connecting"===a){b.innerHTML="Connecting"}if("connected"===a){b.innerHTML="Connected"}if("disconnecting"===a){b.innerHTML="Disconnecting"}if("disconnected"===a){b.innerHTML="Disconnected"}if("denied"===a){b.innerHTML="Denied"}});case 4:case"end":return a.stop();}}},a)}));return function(){return a.apply(this,arguments)}}();a.connectChat=d});
//# sourceMappingURL=init-chat.min.js.map
